/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.0 		*/
/*  Created On : 19-bï¿½e-2023 22:28:43 				*/
/*  DBMS       : Oracle 						*/
/* ---------------------------------------------------- */

/* Drop Triggers, Sequences for Autonumber Columns */

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_COMMENT_COMMENT_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_COMMENT_COMMENT_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_COMMENT_COMMENT_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_COMMENT_COMMENT_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_FILE_FILE_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_FILE_FILE_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_FILE_FILE_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_FILE_FILE_ID'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_GAME_GAME_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_GAME_GAME_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_GAME_GAME_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_GAME_GAME_ID'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_CHANGELOGS_CHANGELOG_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_CHANGELOGS_CHANGELOG_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_CHANGELOGS_CHANGELOG_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_CHANGELOGS_CHANGELOG_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_IMAGE_IMAGE_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_IMAGE_IMAGE_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_IMAGE_IMAGE_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_IMAGE_IMAGE_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_MOD_MOD_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_MOD_MOD_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_MOD_MOD_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_MOD_MOD_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_MOD_DEPENDENCY_MODDEPENDENCYID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_MOD_DEPENDENCY_MODDEPENDENCYID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_MOD_DEPENDENCY_MODDEPENDENCYID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_MOD_DEPENDENCY_MODDEPENDENCYID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_NEWS_NEWS_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_NEWS_NEWS_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_NEWS_NEWS_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_NEWS_NEWS_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_TRACKED_MOD_TRACKED_MOD_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_TRACKED_MOD_TRACKED_MOD_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_TRACKED_MOD_TRACKED_MOD_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_TRACKED_MOD_TRACKED_MOD_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_TRIGGERS 
  WHERE OWNER = '' 
  AND TRIGGER_NAME = 'TRG_VIDEO_VIDEO_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_VIDEO_VIDEO_ID"'; 
END IF; 
END; 

;

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM ALL_SEQUENCES 
  WHERE SEQUENCE_OWNER = '' 
  AND SEQUENCE_NAME = 'SEQ_VIDEO_VIDEO_ID'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_VIDEO_VIDEO_ID"'; 
END IF; 
END; 

;

/* Drop Tables */

begin
	EXECUTE IMMEDIATE 'DROP TABLE   COMMENTS CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   EMPLOYEE CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   FILES CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   GAME CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   CHANGELOGS CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   IMAGES CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   MOD CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   MOD_DEPENDENCY CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   NEWS CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   TRACKED_MOD CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   USERS CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   VIDEO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;  
/

/* Create Tables */

CREATE TABLE  COMMENTS
(
	DATE_COMMENTED DATE NOT NULL,
	PARENT_COMMENT NUMBER(15) NULL,
	COMMENT_TEXT NVARCHAR2(500) NOT NULL,
	COMMENT_ID NUMBER(15) NOT NULL,
	MOD_ID NUMBER(12) NOT NULL,
	USERS_ID VARCHAR2(50) NOT NULL
)
;

CREATE TABLE  EMPLOYEE
(
	FIRST_NAME VARCHAR2(30) NOT NULL,
	LAST_NAME VARCHAR2(30) NOT NULL,
	PHONE_NUMBER VARCHAR2(15) NOT NULL,
	CITY VARCHAR2(50) NOT NULL,
	COUNTRY VARCHAR2(50) NOT NULL,
	STREET VARCHAR2(50) NOT NULL,
	HOUSE_NUMBER VARCHAR2(50) NOT NULL,
	POSTAL_CODE VARCHAR2(50) NOT NULL
)
;

CREATE TABLE  FILES
(
	DESCRIPTION NVARCHAR2(200) NULL,
	FILE_PATH VARCHAR2(300) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	VERSION varchar(10) NOT NULL,
	FILE_ID NUMBER(15) NOT NULL,
	MOD_ID NUMBER(12) NOT NULL
)
;

CREATE TABLE  GAME
(
	RELEASE_DATE DATE NOT NULL,
	DESCRIPTION VARCHAR2(200) NOT NULL,
	DEVELOPER VARCHAR2(50) NOT NULL,
	GAME_NAME VARCHAR2(50) NOT NULL,
	GAME_ID NUMBER(8) NOT NULL
)
;

CREATE TABLE  CHANGELOGS
(
	DESCRIPTION VARCHAR2(500) NOT NULL,
	VERSION VARCHAR2(10) NOT NULL,
	CHANGELOG_ID NUMBER(15) NOT NULL,
	MOD_ID NUMBER(12) NOT NULL
)
;

CREATE TABLE  IMAGES
(
	IMAGE_PATH VARCHAR2(300) NOT NULL,
	IMAGE_ID NUMBER(15) NOT NULL,
	MOD_ID NUMBER(12) NOT NULL
)
;

CREATE TABLE  MOD
(
	DATE_PUBLISHED DATE NOT NULL,
	DESCRIPTION VARCHAR2(2000) NOT NULL,
	MOD_NAME VARCHAR2(50) NOT NULL,
	THUMBNAIL_IMAGE_ID VARCHAR2(300) NOT NULL,
	TRACK_COUNT NUMBER(12) NOT NULL,
	MOD_ID NUMBER(12) NOT NULL,
	GAME_ID NUMBER(8) NOT NULL,
	AUTHOR VARCHAR2(50) NOT NULL
)
;

CREATE TABLE  MOD_DEPENDENCY
(
	CHILDMODID NUMBER(12) NOT NULL,
	PARENTMODID NUMBER(12) NOT NULL,
	MODDEPENDENCYID NUMBER(15) NOT NULL
)
;

CREATE TABLE  NEWS
(
	DESCRIPTION VARCHAR2(2000) NOT NULL,
	HEADLINE VARCHAR2(30) NOT NULL,
	IMAGE_PATH VARCHAR2(300) NOT NULL,
	IS_PINNED CHAR(1) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	NEWS_ID NUMBER(8) NOT NULL,
	GAME_ID NUMBER(8) NULL,
	MOD_ID NUMBER(10) NULL,
	AUTHOR VARCHAR2(50) NOT NULL
)
;

CREATE TABLE  TRACKED_MOD
(
	TRACKED_MOD_ID NUMBER(12) NOT NULL,
	MOD_ID NUMBER(12) NOT NULL,
	USERS_ID VARCHAR2(50) NOT NULL
)
;

CREATE TABLE  USERS
(
	IS_BANNED CHAR(1) NOT NULL,
	IS_ADMIN CHAR(1) NOT NULL,
	USERNAME VARCHAR2(30) NOT NULL,
	PASSWORD VARCHAR2(30) NOT NULL,
	REGISTER_DATE DATE NOT NULL,
	EMAIL VARCHAR2(50) NOT NULL,
	EMPLOYEE_ID VARCHAR2(15) NULL
)
;

CREATE TABLE  VIDEO
(
	VIDEO_PATH VARCHAR2(300) NOT NULL,
	VIDEO_ID NUMBER(14) NOT NULL,
	MOD_ID NUMBER(12) NOT NULL
)
;

/* Create Comments, Sequences and Triggers for Autonumber Columns */

CREATE SEQUENCE SEQ_COMMENT_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_COMMENT_ID 
	BEFORE INSERT 
	ON COMMENTS 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_COMMENT_ID.NEXTVAL 
		INTO :NEW.COMMENT_ID 
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_FILE_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_FILE_ID 
	BEFORE INSERT 
	ON FILES 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_FILE_ID.NEXTVAL 
		INTO :NEW.FILE_ID
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_GAME_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_GAME_ID 
	BEFORE INSERT 
	ON GAME 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_GAME_ID.NEXTVAL 
		INTO :NEW.GAME_ID 
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_CHANGELOG_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_CHANGELOG_ID 
	BEFORE INSERT 
	ON CHANGELOGS 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_CHANGELOG_ID.NEXTVAL 
		INTO :NEW.CHANGELOG_ID 
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_IMAGE_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_IMAGE_ID 
	BEFORE INSERT 
	ON IMAGES 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_IMAGE_ID.NEXTVAL 
		INTO :NEW.IMAGE_ID 
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_MOD_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_MOD_ID
	BEFORE INSERT 
	ON MOD 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_MOD_ID.NEXTVAL 
		INTO :NEW.MOD_ID 
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_MOD_DEPENDENCY_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_MOD_DEPENDENCY_ID 
	BEFORE INSERT 
	ON MOD_DEPENDENCY 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_MOD_DEPENDENCY_ID.NEXTVAL 
		INTO :NEW.MODDEPENDENCYID 
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_NEWS_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_NEWS_ID 
	BEFORE INSERT 
	ON NEWS 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_NEWS_ID.NEXTVAL 
		INTO :NEW.NEWS_ID 
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_TRACKED_MOD_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_TRACKED_MOD_ID 
	BEFORE INSERT 
	ON TRACKED_MOD 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_TRACKED_MOD_ID.NEXTVAL 
		INTO :NEW.TRACKED_MOD_ID 
		FROM DUAL; 
	END;
/


CREATE SEQUENCE SEQ_VIDEO_ID 
	INCREMENT BY 1 
	START WITH 0 
	NOMAXVALUE 
	MINVALUE  0 
	NOCYCLE 
	NOCACHE 
	NOORDER
;

CREATE OR REPLACE TRIGGER TRG_VIDEO_ID 
	BEFORE INSERT 
	ON VIDEO 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_VIDEO_ID.NEXTVAL 
		INTO :NEW.VIDEO_ID 
		FROM DUAL; 
	END;
/


/* Create Primary Keys, Indexes, Uniques, Checks, Triggers */

ALTER TABLE  COMMENTS 
 ADD CONSTRAINT PK_COMMENT
	PRIMARY KEY (COMMENT_ID) 
 USING INDEX
;

CREATE INDEX IXFK_COMMENT_COMMENT   
 ON  COMMENTS (PARENT_COMMENT) 
;

CREATE INDEX IXFK_COMMENT_MOD   
 ON  COMMENTS (MOD_ID) 
;

CREATE INDEX IXFK_COMMENT_USERS   
 ON  COMMENTS (USERS_ID) 
;

ALTER TABLE  EMPLOYEE 
 ADD CONSTRAINT PK_EMPLOYEE
	PRIMARY KEY (PHONE_NUMBER) 
 USING INDEX
;

ALTER TABLE  FILES 
 ADD CONSTRAINT PK_FILE
	PRIMARY KEY (FILE_ID) 
 USING INDEX
;

CREATE INDEX IXFK_FILE_MOD   
 ON  FILES (MOD_ID) 
;

ALTER TABLE  GAME 
 ADD CONSTRAINT PK_GAME
	PRIMARY KEY (GAME_ID) 
 USING INDEX
;

ALTER TABLE  CHANGELOGS 
 ADD CONSTRAINT PK_CHANGELOGS
	PRIMARY KEY (CHANGELOG_ID) 
 USING INDEX
;

CREATE INDEX IXFK_CHANGELOGS_MOD   
 ON  CHANGELOGS (MOD_ID) 
;

ALTER TABLE  IMAGES 
 ADD CONSTRAINT PK_IMAGE
	PRIMARY KEY (IMAGE_ID) 
 USING INDEX
;

CREATE INDEX IXFK_IMAGE_MOD   
 ON  IMAGES (MOD_ID) 
;

ALTER TABLE  MOD 
 ADD CONSTRAINT PK_MOD
	PRIMARY KEY (MOD_ID) 
 USING INDEX
;

CREATE INDEX IXFK_MOD_GAME   
 ON  MOD (GAME_ID) 
;

ALTER TABLE  MOD_DEPENDENCY 
 ADD CONSTRAINT PK_MODDEPENDENCY
	PRIMARY KEY (MODDEPENDENCYID) 
 USING INDEX
;

CREATE INDEX IXFK_MODDEPENDENCY_M02   
 ON  MOD_DEPENDENCY (CHILDMODID) 
;

CREATE INDEX IXFK_MODDEPENDENCY_MOD   
 ON  MOD_DEPENDENCY (PARENTMODID) 
;

ALTER TABLE  NEWS 
 ADD CONSTRAINT PK_NEWS
	PRIMARY KEY (NEWS_ID) 
 USING INDEX
;

CREATE INDEX IXFK_NEWS_GAME   
 ON  NEWS (GAME_ID) 
;

CREATE INDEX IXFK_NEWS_MOD   
 ON  NEWS (MOD_ID) 
;

ALTER TABLE  TRACKED_MOD 
 ADD CONSTRAINT PK_TRACKEDMOD
	PRIMARY KEY (TRACKED_MOD_ID) 
 USING INDEX
;

CREATE INDEX IXFK_TRACKEDMOD_MOD   
 ON  TRACKED_MOD (MOD_ID) 
;

CREATE INDEX IXFK_TRACKEDMOD_USERS   
 ON  TRACKED_MOD (USERS_ID) 
;

ALTER TABLE  USERS 
 ADD CONSTRAINT PK_USERS
	PRIMARY KEY (EMAIL) 
 USING INDEX
;

ALTER TABLE  VIDEO 
 ADD CONSTRAINT PK_VIDEO
	PRIMARY KEY (VIDEO_ID) 
 USING INDEX
;

CREATE INDEX IXFK_VIDEO_MOD   
 ON  VIDEO (MOD_ID) 
;

/* Create Foreign Key Constraints */

ALTER TABLE  COMMENTS 
 ADD CONSTRAINT FK_COMMENT_COMMENT
	FOREIGN KEY (PARENT_COMMENT) REFERENCES  COMMENTS (COMMENT_ID)
;

ALTER TABLE  COMMENTS 
 ADD CONSTRAINT FK_COMMENT_MOD
	FOREIGN KEY (MOD_ID) REFERENCES  MOD (MOD_ID)
;

ALTER TABLE  COMMENTS 
 ADD CONSTRAINT FK_COMMENT_USERS
	FOREIGN KEY (USERS_ID) REFERENCES  USERS (EMAIL)
;

ALTER TABLE  FILES 
 ADD CONSTRAINT FK_FILE_MOD
	FOREIGN KEY (MOD_ID) REFERENCES  MOD (MOD_ID)
;

ALTER TABLE  CHANGELOGS 
 ADD CONSTRAINT FK_CHANGELOGS_MOD
	FOREIGN KEY (MOD_ID) REFERENCES  MOD (MOD_ID)
;

ALTER TABLE  IMAGES 
 ADD CONSTRAINT FK_IMAGE_MOD
	FOREIGN KEY (MOD_ID) REFERENCES  MOD (MOD_ID)
;

ALTER TABLE  MOD 
 ADD CONSTRAINT FK_MOD_GAME
	FOREIGN KEY (GAME_ID) REFERENCES  GAME (GAME_ID)
;

ALTER TABLE  MOD 
 ADD CONSTRAINT FK_MOD_AUTHOR
	FOREIGN KEY (AUTHOR) REFERENCES  USERS (EMAIL)
;

ALTER TABLE  MOD_DEPENDENCY 
 ADD CONSTRAINT FK_DEPENDENCYCHILD_MOD
	FOREIGN KEY (CHILDMODID) REFERENCES  MOD (MOD_ID)
;

ALTER TABLE  MOD_DEPENDENCY 
 ADD CONSTRAINT FK_DEPENDENCYPARENT_MOD
	FOREIGN KEY (PARENTMODID) REFERENCES  MOD (MOD_ID)
;

ALTER TABLE  NEWS 
 ADD CONSTRAINT FK_NEWS_GAME
	FOREIGN KEY (GAME_ID) REFERENCES  GAME (GAME_ID)
;

ALTER TABLE  NEWS 
 ADD CONSTRAINT FK_NEWS_MOD
	FOREIGN KEY (MOD_ID) REFERENCES  MOD (MOD_ID)
;

ALTER TABLE  NEWS 
 ADD CONSTRAINT FK_NEWS_AUTHOR
	FOREIGN KEY (AUTHOR) REFERENCES  USERS (EMAIL)
;

ALTER TABLE  TRACKED_MOD 
 ADD CONSTRAINT FK_TRACKEDMOD_MOD
	FOREIGN KEY (MOD_ID) REFERENCES  MOD (MOD_ID)
;

ALTER TABLE  TRACKED_MOD 
 ADD CONSTRAINT FK_TRACKEDMOD_USERS
	FOREIGN KEY (USERS_ID) REFERENCES  USERS (EMAIL)
;

ALTER TABLE  USERS 
 ADD CONSTRAINT FK_USERS_EMPLOYEE
	FOREIGN KEY (EMPLOYEE_ID) REFERENCES  EMPLOYEE (PHONE_NUMBER)
;

ALTER TABLE  VIDEO 
 ADD CONSTRAINT FK_VIDEO_MOD
	FOREIGN KEY (MOD_ID) REFERENCES  MOD (MOD_ID)
;